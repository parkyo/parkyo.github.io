<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://parkyo.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="https://parkyo.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://parkyo.github.io/" rel="alternate" type="text/html" /><updated>2020-06-22T15:12:41+09:00</updated><id>https://parkyo.github.io/</id><title type="html">Younse Park</title><subtitle>Hi, I am a software engineer</subtitle><entry><title type="html">Python basics</title><link href="https://parkyo.github.io/categories/python-basics/" rel="alternate" type="text/html" title="Python basics" /><published>2020-06-22T00:00:00+09:00</published><updated>2020-06-22T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/python-basics</id><content type="html" xml:base="https://parkyo.github.io/categories/python-basics/">&lt;h3 id=&quot;uses&quot;&gt;Uses&lt;/h3&gt;
&lt;li&gt;Web Development&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;li&gt;Data Analytics&lt;/li&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;self&quot;&gt;self&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;self&lt;/strong&gt; is an instance of the class to access properties and methods of the class&lt;/p&gt;</content><category term="blog" /><category term="concepts" /><category term="python" /><summary type="html">Uses
Web Development
Machine Learning
Data Analytics

self
self is an instance of the class to access properties and methods of the class</summary></entry><entry><title type="html">render vs. HTTPResponse vs. HTTPResponseredirect</title><link href="https://parkyo.github.io/categories/render-httpresponse/" rel="alternate" type="text/html" title="render vs. HTTPResponse vs. HTTPResponseredirect" /><published>2020-06-21T00:00:00+09:00</published><updated>2020-06-21T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/render-httpresponse</id><content type="html" xml:base="https://parkyo.github.io/categories/render-httpresponse/">&lt;p&gt;
&lt;strong&gt;HTTP reponse code&lt;/strong&gt; indicates a specific HTTP request has been successfully completed
&lt;ol&gt;
&lt;li&gt;Informatioin responses(100-)&lt;/li&gt;
&lt;li&gt;Successful responses (200-)&lt;/li&gt;
&lt;li&gt;Redirects (300-)&lt;/li&gt;
&lt;li&gt;Client errors (400-)&lt;/li&gt;
&lt;li&gt;Server errors (400-)&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&lt;strong&gt;200 OK&lt;/strong&gt;&lt;/code&gt;
&lt;li&gt;&lt;strong&gt;GET&lt;/strong&gt;: fetching and transmission of the source in the message body&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HEAD&lt;/strong&gt;: the entity headers are in the message body&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PUT or POST&lt;/strong&gt;: transmission of the resource describing the result in the message body&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TRACE&lt;/strong&gt;: the request message in the message body as received by the server&lt;/li&gt;
&lt;/p&gt;

&lt;h3 id=&quot;httpresponse&quot;&gt;HTTPResponse()&lt;/h3&gt;
&lt;blockquote&gt;HTTP 200&lt;/blockquote&gt;
&lt;li&gt;returns a HTTPResponse object&lt;/li&gt;
&lt;li&gt;usually used for small responses such as ajax dadta or small numbers&lt;/li&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;httpresponseredirect&quot;&gt;HTTPResponseredirect()&lt;/h3&gt;
&lt;blockquote&gt;HTTP 302 (found/moved temporarily)&lt;/blockquote&gt;
&lt;li&gt;redirects the page to the given url parameter&lt;/li&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;renderrequest-template_name-contextnone-content_typenone-stats-none-usingnone&quot;&gt;Render(request, template_name, context=None, content_type=None, stats-None, using=None)&lt;/h3&gt;
&lt;li&gt;instead of rendering the template in HTTPResponse()&lt;/li&gt;
&lt;li&gt;combines the template with the context and returns HTTPResponse object&lt;/li&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;redirectto-args-permanentfalse-kwargs&quot;&gt;Redirect(to, args, permanent=false, kwargs)&lt;/h3&gt;
&lt;li&gt;instead of calling reverse within HTTPResponseredirect(), call redirect to move to the given url&lt;/li&gt;
&lt;li&gt;cannot transfer data between pages&lt;/li&gt;
&lt;li&gt;use names from url pattern in urls.py&lt;/li&gt;</content><category term="blog" /><category term="concepts" /><category term="web" /><category term="server-side" /><category term="django" /><summary type="html">HTTP reponse code indicates a specific HTTP request has been successfully completed

Informatioin responses(100-)
Successful responses (200-)
Redirects (300-)
Client errors (400-)
Server errors (400-)



200 OK
GET: fetching and transmission of the source in the message body
HEAD: the entity headers are in the message body
PUT or POST: transmission of the resource describing the result in the message body
TRACE: the request message in the message body as received by the server</summary></entry><entry><title type="html">how to fetch data from external website</title><link href="https://parkyo.github.io/categories/fetch/" rel="alternate" type="text/html" title="how to fetch data from external website" /><published>2020-06-21T00:00:00+09:00</published><updated>2020-06-21T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/fetch</id><content type="html" xml:base="https://parkyo.github.io/categories/fetch/">&lt;h2 id=&quot;fetch&quot;&gt;Fetch&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Fetch&lt;/strong&gt; is a process of bringing or displaying data to an alternate location.&lt;/p&gt;

&lt;h2 id=&quot;fetch-data-from-web&quot;&gt;Fetch data from web&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Web scraping&lt;/strong&gt;&lt;/p&gt;</content><category term="blog" /><category term="concepts" /><category term="web" /><category term="server-side" /><summary type="html">Fetch
Fetch is a process of bringing or displaying data to an alternate location.</summary></entry><entry><title type="html">CSRF Token</title><link href="https://parkyo.github.io/categories/CSRF-token/" rel="alternate" type="text/html" title="CSRF Token" /><published>2020-06-21T00:00:00+09:00</published><updated>2020-06-21T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/CSRF-token</id><content type="html" xml:base="https://parkyo.github.io/categories/CSRF-token/">&lt;h3 id=&quot;csrf-token&quot;&gt;CSRF Token&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Cross-site Request Forgery token&lt;/strong&gt; is a token containing a random value generated by the server-side application in order to prevent hackers from forging the user’s data. 
&lt;a href=&quot;https://www.youtube.com/watch?v=Ub5TLow9GL4&quot; class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/csrf_token.png&quot; /&gt;&lt;/a&gt;
When a client logs in, the server gives a session token unique to that client. The client needs to provide the same token in order to request to the server so that the server validates it.&lt;/p&gt;</content><category term="blog" /><category term="concepts" /><category term="web" /><category term="server-side" /><summary type="html">CSRF Token
Cross-site Request Forgery token is a token containing a random value generated by the server-side application in order to prevent hackers from forging the user’s data. 

When a client logs in, the server gives a session token unique to that client. The client needs to provide the same token in order to request to the server so that the server validates it.</summary></entry><entry><title type="html">Google Kick Start 2020 Round A - Allocation</title><link href="https://parkyo.github.io/categories/Google-kickstart-2020-A-allocation/" rel="alternate" type="text/html" title="Google Kick Start 2020 Round A - Allocation" /><published>2020-06-19T00:00:00+09:00</published><updated>2020-06-19T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/Google-kickstart-2020-A-allocation</id><content type="html" xml:base="https://parkyo.github.io/categories/Google-kickstart-2020-A-allocation/">&lt;p&gt;&lt;a href=&quot;https://codingcompetitions.withgoogle.com/kickstart/round/000000000019ffc7/00000000001d3f56&quot;&gt;LINK&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;There are N houses for sale. The i-th house costs Ai dollars to buy. You have a budget of B dollars to spend.
What is the maximum number of houses you can buy?&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;input&lt;/strong&gt;: 
3
4 100
20 90 40 90
4 50
30 30 10 10
3 300
999 999 999&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;output&lt;/strong&gt;:
Case #1: 2
Case #2: 3
Case #3: 0&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt; written in C++&lt;/blockquote&gt;

&lt;p&gt;First of all, I read the word ‘maximum’ in the problem and automatically thought it was an optimization problem with dynamic programming. I tried to solve it with dp but NOPE lol. It was a simple problem.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;Sort the prices in the ascending order. Increment the count as looping through and adding the prices to the total price until the total prices go over the given amount of dollars.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&lt;strong&gt;int main(){
    int tests, size, b;
    cin &amp;gt;&amp;gt; tests;
    while(--tests &amp;gt;= 0){
        cin &amp;gt;&amp;gt; size &amp;gt;&amp;gt; b;
        int cur;
        vector &amp;lt;int&amp;gt; prices(size);
        for(size_t i = 0; i &amp;lt; prices.size(); ++i){
            cin &amp;gt;&amp;gt; cur;
            prices[i] = cur;
        }
        int cur_total = 0;
        int count = 0;
        sort(prices.begin(), prices.end());
        for(size_t i = 0; i &amp;lt; prices.size(); ++i){
            if (cur_total + prices[i] &amp;lt;= b){
                ++count;
                cur_total += prices[i];
            }
        }
        cout &amp;lt;&amp;lt; count;
    }
    return 0;
    
}   &lt;/strong&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Time Complexity = &lt;i&gt;O(nlogn)&lt;/i&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;Think about greedy algorithm first&lt;/blockquote&gt;</content><category term="blog" /><category term="algorithm" /><category term="kick_start" /><category term="greedy" /><summary type="html">LINK</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Google Kick Start 2020 Round A - Plates</title><link href="https://parkyo.github.io/categories/Google-kick-start-2020-A-plates/" rel="alternate" type="text/html" title="Google Kick Start 2020 Round A - Plates" /><published>2020-06-19T00:00:00+09:00</published><updated>2020-06-19T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/Google-kick-start-2020-A-plates</id><content type="html" xml:base="https://parkyo.github.io/categories/Google-kick-start-2020-A-plates/">&lt;p&gt;&lt;a href=&quot;https://codingcompetitions.withgoogle.com/kickstart/round/000000000019ffc7/00000000001d40bb&quot;&gt;LINK&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;Dr. Patel has N stacks of plates. Each stack contains K plates. Each plate has a positive beauty value, describing how beautiful it looks.&lt;/p&gt;

&lt;p&gt;Dr. Patel would like to take exactly P plates to use for dinner tonight. If he would like to take a plate in a stack, he must also take all of the plates above it in that stack as well.&lt;/p&gt;

&lt;p&gt;Help Dr. Patel pick the P plates that would maximize the total sum of beauty values.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;input&lt;/strong&gt;: 
2
2 4 5
10 10 100 30
80 50 10 50
3 2 3
80 80
15 50
20 10&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;output&lt;/strong&gt;:
Case #1: 250
Case #2: 180&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;I have realized a lot of my test failures come from small errors like not checking enough conditions or confusing variables.
These small mistakes always prevent me from getting scores even after making almost perfect solution.
I think this comes from experience to detect what common errors can be in the solution or what specific formants are necessary for each competition.&lt;/blockquote&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;Similar to &lt;strong&gt;0/1 Knapsack Problem&lt;/strong&gt; Bottom-up Approach&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Make two vectors to store values of all plates and to keep track of dynamic programming.&lt;/li&gt;
  &lt;li&gt;When storing values, store accumulated values per stack&lt;/li&gt;
  &lt;li&gt;dp[i][j] = max(dp[i-1][j-n] + values[i][n] where n from 0 to k)&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;
&lt;strong&gt;
int main(){
    int tests, s, p, num;
    cin &amp;gt;&amp;gt; tests;
    for(size_t i = 0; i &amp;lt; tests; ++i){
        cin &amp;gt;&amp;gt; s &amp;gt;&amp;gt; p &amp;gt;&amp;gt; num;
        vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; stacks(s, vector&amp;lt;int&amp;gt;(p+1));
        vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; sol(s, vector&amp;lt;&amp;lt;ntgt;(num+1));
        int cur = 0;
        for(size_t j = 0; j &amp;lt; s; ++j){
            for(size_t k = 1; k &amp;lt; p+1; ++k){
                cin &amp;gt;&amp;gt; cur;
                stacks[j][k] = stacks[j][k-1] + cur;
            }
        }
        
        for(size_t j = 0; j &amp;lt; s; ++j){
            for(size_t k = 1; k &amp;lt; num+1; ++k){
                if(j == 0){
                    if(k &amp;gt; p){
                        sol[j][k] = sol[j][k-1];
                    }else{
                        sol[j][k] = stacks[0][k];
                    }
                }else{
                    int max = 0;
                    for(size_t n = 0; n &amp;lt;= k; ++n){
                        int part = sol[j-1][k-n];
                        if(n &amp;lt;= p){
                            part += stacks[j][n];
                        }else{
                            part += stacks[j][p];
                        }
                            if(max &amp;lt; part){
                                max = part;
                            }
                    }
                    sol[j][k] = max;
                }
                
            }
        }
        
        cout &amp;lt;&amp;lt; &quot;Case #&quot; &amp;lt;&amp;lt; i+1 &amp;lt;&amp;lt; &quot;: &quot; &amp;lt;&amp;lt; sol[s-1][num] &amp;lt;&amp;lt; endl;
    }
    return 0;
    
}
   &lt;/strong&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Time Complexity = &lt;i&gt;O(s&lt;em&gt;p&lt;/em&gt;num)&lt;/i&gt;&lt;/strong&gt;&lt;/p&gt;</content><category term="blog" /><category term="algorithm" /><category term="kick_start" /><category term="dp" /><category term="bottom_up" /><summary type="html">LINK</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Tech Terms</title><link href="https://parkyo.github.io/categories/Tech-terms/" rel="alternate" type="text/html" title="Tech Terms" /><published>2020-06-17T00:00:00+09:00</published><updated>2020-06-17T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/Tech-terms</id><content type="html" xml:base="https://parkyo.github.io/categories/Tech-terms/">&lt;p&gt;There have been so many unfamiliar terms I need to know about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deployment&lt;/strong&gt; means to install, test and implement a computer system or application&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Configuration&lt;/strong&gt; describes the arrangement of hardware and software components to make up the computer system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Module&lt;/strong&gt; is a separate, interchangeable component.&lt;/p&gt;
&lt;li&gt;encampsulate code and data to implmenet a particular functionality&lt;/li&gt;
&lt;li&gt;has an interface to access its functionality in an uniform manner&lt;/li&gt;
&lt;li&gt;easily pluggable with another module that expects its iterface&lt;/li&gt;
&lt;li&gt;packaged in a single unit so that it can be easily deployed&lt;/li&gt;

&lt;p&gt;&lt;strong&gt;Forge&lt;/strong&gt; is a web-based collaborative software platform for developing and sharing computer application.&lt;/p&gt;</content><category term="blog" /><category term="concepts" /><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Django - Deploy</title><link href="https://parkyo.github.io/categories/Django-deploy/" rel="alternate" type="text/html" title="Django - Deploy" /><published>2020-06-17T00:00:00+09:00</published><updated>2020-06-17T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/Django-deploy</id><content type="html" xml:base="https://parkyo.github.io/categories/Django-deploy/">&lt;p&gt;&lt;strong&gt;Deployment&lt;/strong&gt; means to install, test and implement a computer system or application&lt;/p&gt;</content><category term="blog" /><category term="django" /><category term="concepts" /><summary type="html">Deployment means to install, test and implement a computer system or application</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Django Concepts</title><link href="https://parkyo.github.io/categories/Django-concepts/" rel="alternate" type="text/html" title="Django Concepts" /><published>2020-06-17T00:00:00+09:00</published><updated>2020-06-17T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/Django-concepts</id><content type="html" xml:base="https://parkyo.github.io/categories/Django-concepts/">&lt;p&gt;&lt;a href=&quot;https://github.com/parkyo/helloworld_webapp&quot;&gt;&lt;strong&gt;Helloworld Web App&lt;/strong&gt; github&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;make-todo-list&quot;&gt;Make Todo List&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;python manage.py COMMAND&lt;/code&gt; allows you to interact with django project&lt;/p&gt;

&lt;h3 id=&quot;settingspy&quot;&gt;Settings.py&lt;/h3&gt;
&lt;p&gt;When creating a new app within the project, the app’s name has to be added to &lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;urlspy&quot;&gt;urls.py&lt;/h3&gt;
&lt;p&gt;Import new functions from {app_name}.views and add &lt;code&gt;path('{url}', {function})&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;viewspy&quot;&gt;views.py&lt;/h3&gt;
&lt;p&gt;If you created a separate html for the app in templates directory, add &lt;code&gt;from django.shortcuts import render&lt;/code&gt;
&lt;strong&gt;django.shortcuts&lt;/strong&gt; is a package that collects helper functions and classes that span multiple levels of MVC and introudce control coupling.&lt;/p&gt;
&lt;blockquote&gt;&lt;strong&gt;Control coupling&lt;/strong&gt; is one module controlling the flow of another by passing it information on what to do. &lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/topics/http/shortcuts/&quot;&gt;reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;render(request, template_name, context=None, content_type=None, using=None)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;strong&gt;render&lt;/strong&gt; is gathering data, loading the associated templates, applying the data to the templates, and sending the output to the user. &lt;/blockquote&gt;

&lt;h4 id=&quot;required&quot;&gt;required&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;request &lt;/strong&gt;: object used to generate this response
&lt;strong&gt;template_name&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;optional&quot;&gt;optional&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;context &lt;/strong&gt;: a dictionary of values to add to the template context
&lt;strong&gt;content_type &lt;/strong&gt;: the MIME type to use fo rthe resulting doc.&lt;/p&gt;
&lt;blockquote&gt;&lt;strong&gt;MIME types&lt;/strong&gt;: is a media type that describes the nature and format of a document, file or assortment of bytes. &lt;code&gt;type/subtype&lt;/code&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;status&lt;/strong&gt;: status code for the response
&lt;strong&gt;using&lt;/strong&gt; : the name of a template engine to use for loading the template&lt;/p&gt;

&lt;p&gt;&lt;code&gt;from django.http import HttpResponse, HttpResposneRedirect&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;strong&gt;HttpRequest&lt;/strong&gt; objects that contain metadata are created automatically by Django&lt;/blockquote&gt;
&lt;p&gt;Request and response objects are used to pass state through the system.&lt;/p&gt;

&lt;blockquote&gt;Page is requested -&amp;gt; &lt;strong&gt;HttpRequest&lt;/strong&gt; created with metadata about the request -&amp;gt; load view with &lt;strong&gt;HttpRequest&lt;/strong&gt; -&amp;gt; each returns &lt;strong&gt;HttpResponse&lt;/strong&gt; object&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;return HttpResponse('{url}' or {&quot;{msg}&quot;})&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;settingspy-1&quot;&gt;settings.py&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;import os&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add  &lt;code&gt;os.path.join(BASE_DIR, 'templates')&lt;/code&gt; in &lt;code&gt;TEMPLATES &amp;gt; DIRS&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In your live server environment, tell WSGI app what settings file to use&lt;/p&gt;
&lt;blockquote&gt;WSGI is the Web Server Gateway Interface that forwards requests to web apps or frameworks in Python&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;OS module&lt;/strong&gt; provides functions for interacting with the operating system. 
&lt;code&gt;os.path.join({a file system path},{path component to be joined})&lt;/code&gt; 
&lt;code&gt;BASE_DIR&lt;/code&gt; is an absolute path where manage.py lies&lt;/p&gt;</content><category term="blog" /><category term="django" /><category term="concepts" /><category term="python" /><summary type="html">Helloworld Web App github</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Convert a snake case to a camel case</title><link href="https://parkyo.github.io/categories/snake_to_camel/" rel="alternate" type="text/html" title="Convert a snake case to a camel case" /><published>2020-06-16T00:00:00+09:00</published><updated>2020-06-16T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/snake_to_camel</id><content type="html" xml:base="https://parkyo.github.io/categories/snake_to_camel/">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;Convert from snake-case to camel-case and return it.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;input&lt;/strong&gt;: 
naver_webtoon
NAVER_WEBTOON
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;output&lt;/strong&gt;:
naverWebtoon
naverWebtoon&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt; written in C++&lt;/blockquote&gt;

&lt;h2 id=&quot;solution-1&quot;&gt;Solution 1&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;loop through the snake case string&lt;/li&gt;
  &lt;li&gt;As iterationg, have a boolean ‘cap’ and update it if there is a underdash to convert the next letter to cap
&lt;br /&gt;&lt;strong&gt;Time Complexity = &lt;i&gt;O(n)&lt;/i&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;
&lt;strong&gt;
string convertCamel(string snake){
    string camel;
    bool cap = false;
    for(char c : snake){
        if(!cap &amp;amp;&amp;amp; (int)c &amp;lt; 91){&lt;/strong&gt;&lt;i&gt;//if the char is cap when it shouldn't be&lt;/i&gt;&lt;strong&gt;
            camel.push_back(tolower(c)); 
        }else if(c == '_'){&lt;/strong&gt;&lt;i&gt;//if there is an underdash, the next char should be capitalized&lt;/i&gt;&lt;strong&gt;
            cap = true;
        }else if(cap){&lt;/strong&gt;&lt;i&gt;//if there should be a cap char convert the char to cap if it is not. Else, just push it back&lt;/i&gt;&lt;strong&gt;
            if((int)c &amp;gt; 97){
                camel.push_back(toupper(c));
            }else{
                camel.push_back(c);
            }
            cap = false;
        }else{
            camel.push_back(c);
        }
    }
    return camel;
}   
&lt;/strong&gt;
&lt;/code&gt;&lt;/pre&gt;</content><category term="blog" /><category term="algorithm" /><category term="string" /><category term="Naver_webtoons" /><category term="interview" /><summary type="html">Problem
Convert from snake-case to camel-case and return it.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry></feed>
