<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://parkyo.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="https://parkyo.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://parkyo.github.io/" rel="alternate" type="text/html" /><updated>2020-07-19T16:33:45+09:00</updated><id>https://parkyo.github.io/</id><title type="html">Younse Park</title><subtitle>Hi, I am a software engineer</subtitle><entry><title type="html">Prim vs. Djikstra</title><link href="https://parkyo.github.io/categories/algorithm-prim-djikstra/" rel="alternate" type="text/html" title="Prim vs. Djikstra" /><published>2020-07-17T00:00:00+09:00</published><updated>2020-07-17T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/algorithm-prim-djikstra</id><content type="html" xml:base="https://parkyo.github.io/categories/algorithm-prim-djikstra/">&lt;p&gt;&lt;strong&gt;Prim’s algorithm&lt;/strong&gt; is for finding Minimum Spanning Tree that connects ALL vertices of an undirected weighted graph with the lowest possible sum of its edge weights.&lt;/p&gt;
&lt;li&gt;only work on undirected graph&lt;/li&gt;
&lt;li&gt;can handle negative weights&lt;/li&gt;

&lt;p&gt;&lt;strong&gt;Djikstra’s algorithm&lt;/strong&gt; is for finding the shortest path between two vertices with the lowest possibel sum of edge weights&lt;/p&gt;
&lt;li&gt;can work on both directed and undirected graphs&lt;/li&gt;
&lt;li&gt;cannot handle negative weights&lt;/li&gt;</content><category term="blog" /><category term="algorithm" /><category term="leetcode" /><summary type="html">Prim’s algorithm is for finding Minimum Spanning Tree that connects ALL vertices of an undirected weighted graph with the lowest possible sum of its edge weights.
only work on undirected graph
can handle negative weights</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Django - SQL OperationalError : no such table</title><link href="https://parkyo.github.io/categories/django-operationalerror/" rel="alternate" type="text/html" title="Django - SQL OperationalError : no such table" /><published>2020-07-16T00:00:00+09:00</published><updated>2020-07-16T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/django-operationalerror</id><content type="html" xml:base="https://parkyo.github.io/categories/django-operationalerror/"></content><category term="blog" /><category term="django" /><category term="python" /><category term="VS_code" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Google Kick Start 2020 Round D - Record Breaker</title><link href="https://parkyo.github.io/categories/google-kickstart-roundD/" rel="alternate" type="text/html" title="Google Kick Start 2020 Round D - Record Breaker" /><published>2020-07-14T00:00:00+09:00</published><updated>2020-07-14T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/google-kickstart-roundD</id><content type="html" xml:base="https://parkyo.github.io/categories/google-kickstart-roundD/">&lt;p&gt;&lt;a href=&quot;https://codingcompetitions.withgoogle.com/kickstart/round/000000000019ff08/0000000000387171&quot;&gt;LINK&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;level--easy&quot;&gt;Level : Easy&lt;/h3&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;Isyana is given the number of visitors at her local theme park on N consecutive days. The number of visitors on the i-th day is Vi. A day is record breaking if it satisfies both of the following conditions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The number of visitors on the day is strictly larger than the number of visitors on each of the previous days.&lt;/li&gt;
  &lt;li&gt;Either it is the last day, or the number of visitors on the day is strictly larger than the number of visitors on the following day.
Note that the very first day could be a record breaking day!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please help Isyana find out the number of record breaking days.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;input1&lt;/strong&gt;: 
4
3
10 20 14
4
7 7 7 7
5
10 90 20 90 10
3
10 3 10&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;output1&lt;/strong&gt;:
Case #1: 2
Case #2: 1
Case #3: 3
Case #4: 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;Know how to use indices&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;int main(){
    int tests;
    cin &amp;gt;&amp;gt; tests;
    for(size_t i = 0; i &amp;lt; tests; ++i){
        int num;
        cin &amp;gt;&amp;gt; num;
        vector&lt;int&gt; list(num);
        for(size_t j = 0; j &amp;lt; num; ++j){
            int cur;
            cin &amp;gt;&amp;gt; cur;
            list[j] = cur;
        }
        int max = -1;
        int count = 0;
        for(size_t j = 0; j &amp;lt; num; ++j){
            if(list[j] &amp;gt; max){
                max = list[j];
                if(j == list.size()-1||list[j+1]&amp;lt; list[j]){
                    ++count;
                }
            }
        }
        

        cout &amp;lt;&amp;lt; &quot;Case #&quot; &amp;lt;&amp;lt; i+1 &amp;lt;&amp;lt; &quot;: &quot; &amp;lt;&amp;lt; count  &amp;lt;&amp;lt; endl;
    }
    return 0;
}&amp;lt;/strong&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;strong&gt;Time copmlexity: &lt;i&gt;O(t*n)&lt;/i&gt;&lt;/strong&gt;




&lt;!-- &lt;pre&gt;&lt;code&gt; --&gt;

&lt;/int&gt;&lt;/strong&gt;&lt;/code&gt;&lt;/pre&gt;</content><category term="blog" /><category term="algorithm" /><category term="kick_start" /><category term="iteration" /><summary type="html">LINK</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">BeautifulSoup - next_sibling</title><link href="https://parkyo.github.io/categories/beautifulsoup-nextsibling/" rel="alternate" type="text/html" title="BeautifulSoup - next_sibling" /><published>2020-07-13T00:00:00+09:00</published><updated>2020-07-13T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/beautifulsoup-nextsibling</id><content type="html" xml:base="https://parkyo.github.io/categories/beautifulsoup-nextsibling/">&lt;p&gt;&lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup/bs4/doc/#going-sideways&quot;&gt;DOC&lt;/a&gt;&lt;/p&gt;</content><category term="blog" /><category term="beautifulsoup" /><summary type="html">DOC</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Django &amp;amp; Python - Lambda</title><link href="https://parkyo.github.io/categories/django-lambda/" rel="alternate" type="text/html" title="Django &amp; Python - Lambda" /><published>2020-07-03T00:00:00+09:00</published><updated>2020-07-03T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/django-lambda</id><content type="html" xml:base="https://parkyo.github.io/categories/django-lambda/"></content><category term="blog" /><category term="django" /><category term="python" /><category term="concepts" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Django &amp;amp; Visual Studio Code - Debug</title><link href="https://parkyo.github.io/categories/django-vsc-debug/" rel="alternate" type="text/html" title="Django &amp; Visual Studio Code - Debug" /><published>2020-07-03T00:00:00+09:00</published><updated>2020-07-03T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/django-vsc-debug</id><content type="html" xml:base="https://parkyo.github.io/categories/django-vsc-debug/">&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/python/tutorial-django&quot;&gt;DOC&lt;/a&gt;&lt;/p&gt;</content><category term="blog" /><category term="django" /><category term="python" /><category term="VS_code" /><summary type="html">DOC</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Django - Parse String into Date/Time</title><link href="https://parkyo.github.io/categories/django-datetime/" rel="alternate" type="text/html" title="Django - Parse String into Date/Time" /><published>2020-07-03T00:00:00+09:00</published><updated>2020-07-03T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/django-datetime</id><content type="html" xml:base="https://parkyo.github.io/categories/django-datetime/">&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior&quot;&gt;link&lt;/a&gt;&lt;/p&gt;</content><category term="blog" /><category term="django" /><category term="concepts" /><category term="python" /><summary type="html">link</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Python - Web Scraping with Selenium</title><link href="https://parkyo.github.io/categories/django-selenium/" rel="alternate" type="text/html" title="Python - Web Scraping with Selenium" /><published>2020-07-03T00:00:00+09:00</published><updated>2020-07-03T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/django-selenium</id><content type="html" xml:base="https://parkyo.github.io/categories/django-selenium/">&lt;pre&gt;&lt;code&gt;final_url = f'{url}{name}001&amp;amp;termArray=f_20_2310/'
driver = webdriver.Chrome()
driver.get(final_url)
response = driver.execute_script(&quot;return document.documentElement.outerHTML&quot;)
driver.quit()
soup = BeautifulSoup(response, &quot;lxml&quot;)
panel = soup.find('div', attrs={'id':'classScheduleBody'})
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;how-to-web-scrape-without-opening-the-browser&quot;&gt;how to web scrape without opening the browser&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from selenium.webdriver.chrome.options import Options

options = Options()
options.add_argument('--headless')&lt;/code&gt;&lt;/pre&gt;</content><category term="blog" /><category term="python" /><category term="web_scraping" /><summary type="html">final_url = f'{url}{name}001&amp;amp;termArray=f_20_2310/'
driver = webdriver.Chrome()
driver.get(final_url)
response = driver.execute_script(&quot;return document.documentElement.outerHTML&quot;)
driver.quit()
soup = BeautifulSoup(response, &quot;lxml&quot;)
panel = soup.find('div', attrs={'id':'classScheduleBody'})</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Python - AttrbiuteError</title><link href="https://parkyo.github.io/categories/python-attributeerror/" rel="alternate" type="text/html" title="Python - AttrbiuteError" /><published>2020-07-03T00:00:00+09:00</published><updated>2020-07-03T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/python-attributeerror</id><content type="html" xml:base="https://parkyo.github.io/categories/python-attributeerror/">&lt;p&gt;&lt;span class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/attributeerror.png&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;AttributeError&lt;/code&gt; is raised when an attribute reference or assignment fails.&lt;/p&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;x = 10
x.append(6)&lt;/code&gt;&lt;/pre&gt;</content><category term="blog" /><category term="python" /><category term="error" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry><entry><title type="html">Django - Many-to-One Relationship</title><link href="https://parkyo.github.io/categories/django-many-to-one/" rel="alternate" type="text/html" title="Django - Many-to-One Relationship" /><published>2020-06-30T00:00:00+09:00</published><updated>2020-06-30T00:00:00+09:00</updated><id>https://parkyo.github.io/categories/django-many-to-one</id><content type="html" xml:base="https://parkyo.github.io/categories/django-many-to-one/">&lt;h3 id=&quot;foreignkey&quot;&gt;Foreignkey&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/topics/db/examples/many_to_one/&quot;&gt;doc&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</content><category term="blog" /><category term="django" /><category term="concepts" /><category term="python" /><summary type="html">Foreignkey
doc</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://parkyo.github.io" /></entry></feed>
